Suite/Test/Step Name,Browser,Description,Start time,End time,Duration,Status
AllCdT_Person,,,2019-04-23 17:47:22,2019-04-23 17:47:25,"2,997s",PASSED
,,,,,,
Test Cases/cdT_Person/cdT_retrieveSinglePerson,,,2019-04-23 17:47:23,2019-04-23 17:47:24,"0,625s",PASSED
Start setup action : setupTestCase,,,2019-04-23 17:47:23,2019-04-23 17:47:23,"0,126s",PASSED
"AddSinglePerson = sendRequest(findTestObject(""PersonsOR/PostPerson"", [""gender"":gender, ""name"":namePerson, ""dateBD"":birthDate]))",,,2019-04-23 17:47:24,2019-04-23 17:47:24,"0,012s",PASSED
slurper = new groovy.json.JsonSlurper(),,,2019-04-23 17:47:24,2019-04-23 17:47:24,"0,005s",PASSED
result = slurper.parseText(AddSinglePerson.getResponseBodyContent()),,,2019-04-23 17:47:24,2019-04-23 17:47:24,"0,017s",PASSED
assert name == namePerson,,,2019-04-23 17:47:24,2019-04-23 17:47:24,"0,005s",PASSED
assert gender == gender,,,2019-04-23 17:47:24,2019-04-23 17:47:24,"0,001s",PASSED
assert birthDate == birthDate,,,2019-04-23 17:47:24,2019-04-23 17:47:24,"0,002s",PASSED
"verifyResponseStatusCode(AddSinglePerson, 200)",,,2019-04-23 17:47:24,2019-04-23 17:47:24,"0,004s",PASSED
"checkIfPersonExist = sendRequest(findTestObject(""PersonsOR/GetOnePerson""))",,,2019-04-23 17:47:24,2019-04-23 17:47:24,"0,048s",PASSED
slurper1 = new groovy.json.JsonSlurper(),,,2019-04-23 17:47:24,2019-04-23 17:47:24,"0,001s",PASSED
result1 = slurper1.parseText(checkIfPersonExist.getResponseBodyContent()),,,2019-04-23 17:47:24,2019-04-23 17:47:24,"0,001s",PASSED
assert name == namePerson,,,2019-04-23 17:47:24,2019-04-23 17:47:24,"0,000s",PASSED
assert gender == gender,,,2019-04-23 17:47:24,2019-04-23 17:47:24,"0,000s",PASSED
assert birthDate == birthDate,,,2019-04-23 17:47:24,2019-04-23 17:47:24,"0,000s",PASSED
"verifyResponseStatusCode(checkIfPersonExist, 200)",,,2019-04-23 17:47:24,2019-04-23 17:47:24,"0,003s",PASSED
"DeletePersonAddedLastely = sendRequest(findTestObject(""PersonsOR/DeleteOnePerson""))",,,2019-04-23 17:47:24,2019-04-23 17:47:24,"0,044s",PASSED
"verifyResponseStatusCode(DeletePersonAddedLastely, 204)",,,2019-04-23 17:47:24,2019-04-23 17:47:24,"0,007s",PASSED
"checkIfPersonExistKo = sendRequest(findTestObject(""PersonsOR/GetOnePerson""))",,,2019-04-23 17:47:24,2019-04-23 17:47:24,"0,042s",PASSED
"verifyResponseStatusCode(checkIfPersonExistKo, 404)",,,2019-04-23 17:47:24,2019-04-23 17:47:24,"0,003s",PASSED
,,,,,,
Test Cases/cdT_Person/cdT_AddPerson,,essai,2019-04-23 17:47:24,2019-04-23 17:47:24,"0,431s",PASSED
Start setup action : setupTestCase,,,2019-04-23 17:47:24,2019-04-23 17:47:24,"0,002s",PASSED
"checkPersonKo = sendRequest(findTestObject(""PersonsOR/GetOnePerson""))",,,2019-04-23 17:47:24,2019-04-23 17:47:24,"0,032s",PASSED
"verifyResponseStatusCode(checkPersonKo, 404)",,,2019-04-23 17:47:24,2019-04-23 17:47:24,"0,006s",PASSED
"AddSinglePerson = sendRequest(findTestObject(""PersonsOR/PostPerson"", [""gender"":gender, ""name"":namePerson, ""dateBD"":birthDate]))",,,2019-04-23 17:47:24,2019-04-23 17:47:24,"0,024s",PASSED
slurper = new groovy.json.JsonSlurper(),,,2019-04-23 17:47:24,2019-04-23 17:47:24,"0,005s",PASSED
result = slurper.parseText(AddSinglePerson.getResponseBodyContent()),,,2019-04-23 17:47:24,2019-04-23 17:47:24,"0,001s",PASSED
assert name == namePerson,,,2019-04-23 17:47:24,2019-04-23 17:47:24,"0,000s",PASSED
assert gender == gender,,,2019-04-23 17:47:24,2019-04-23 17:47:24,"0,000s",PASSED
assert birthDate == birthDate,,,2019-04-23 17:47:24,2019-04-23 17:47:24,"0,001s",PASSED
"verifyResponseStatusCode(AddSinglePerson, 200)",,,2019-04-23 17:47:24,2019-04-23 17:47:24,"0,002s",PASSED
"checkIfPersonWellAdded = sendRequest(findTestObject(""PersonsOR/GetOnePerson""))",,,2019-04-23 17:47:24,2019-04-23 17:47:24,"0,049s",PASSED
slurper1 = new groovy.json.JsonSlurper(),,,2019-04-23 17:47:24,2019-04-23 17:47:24,"0,006s",PASSED
result1 = slurper1.parseText(checkIfPersonWellAdded.getResponseBodyContent()),,,2019-04-23 17:47:24,2019-04-23 17:47:24,"0,001s",PASSED
assert name == namePerson,,,2019-04-23 17:47:24,2019-04-23 17:47:24,"0,001s",PASSED
assert gender == gender,,,2019-04-23 17:47:24,2019-04-23 17:47:24,"0,001s",PASSED
assert birthDate == birthDate,,,2019-04-23 17:47:24,2019-04-23 17:47:24,"0,000s",PASSED
"verifyResponseStatusCode(AddSinglePerson, 200)",,,2019-04-23 17:47:24,2019-04-23 17:47:24,"0,005s",PASSED
"DeletePersonAddedLastely = sendRequest(findTestObject(""PersonsOR/DeleteOnePerson""))",,,2019-04-23 17:47:24,2019-04-23 17:47:24,"0,033s",PASSED
"verifyResponseStatusCode(DeletePersonAddedLastely, 204)",,,2019-04-23 17:47:24,2019-04-23 17:47:24,"0,004s",PASSED
"checkPersonKoAgain = sendRequest(findTestObject(""PersonsOR/GetOnePerson""))",,,2019-04-23 17:47:24,2019-04-23 17:47:24,"0,064s",PASSED
"verifyResponseStatusCode(checkPersonKoAgain, 404)",,,2019-04-23 17:47:24,2019-04-23 17:47:24,"0,006s",PASSED
,,,,,,
Test Cases/cdT_Person/cdT_retriveListPerson,,,2019-04-23 17:47:24,2019-04-23 17:47:25,"0,345s",PASSED
Start setup action : setupTestCase,,,2019-04-23 17:47:24,2019-04-23 17:47:24,"0,001s",PASSED
"data_init = findTestData(""Data Files/DDT_Person"")",,,2019-04-23 17:47:24,2019-04-23 17:47:24,"0,003s",PASSED
rows_lign = data_init.getRowNumbers(),,,2019-04-23 17:47:24,2019-04-23 17:47:24,"0,001s",PASSED
"AddSinglePerson = sendRequest(findTestObject(""PersonsOR/PostPerson"", [""gender"":gender, ""name"":namePerson, ""dateBD"":birthDate]))",,,2019-04-23 17:47:24,2019-04-23 17:47:24,"0,008s",PASSED
slurper = new groovy.json.JsonSlurper(),,,2019-04-23 17:47:24,2019-04-23 17:47:24,"0,001s",PASSED
result = slurper.parseText(AddSinglePerson.getResponseBodyContent()),,,2019-04-23 17:47:24,2019-04-23 17:47:24,"0,001s",PASSED
assert name == namePerson,,,2019-04-23 17:47:24,2019-04-23 17:47:24,"0,002s",PASSED
assert gender == gender,,,2019-04-23 17:47:24,2019-04-23 17:47:24,"0,000s",PASSED
assert birthDate == birthDate,,,2019-04-23 17:47:24,2019-04-23 17:47:24,"0,000s",PASSED
"verifyResponseStatusCode(AddSinglePerson, 200)",,,2019-04-23 17:47:24,2019-04-23 17:47:24,"0,003s",PASSED
"checkListPerson = sendRequest(findTestObject(""PersonsOR/GetAll""))",,,2019-04-23 17:47:24,2019-04-23 17:47:24,"0,011s",PASSED
"verifyResponseStatusCode(checkListPerson, 200, STOP_ON_FAILURE)",,,2019-04-23 17:47:24,2019-04-23 17:47:24,"0,004s",PASSED
if (valueExecSuiteTest == 1),,,2019-04-23 17:47:24,2019-04-23 17:47:24,"0,023s",PASSED
"DeletePersonAddedLastely = sendRequest(findTestObject(""PersonsOR/DeleteOnePerson""))",,,2019-04-23 17:47:24,2019-04-23 17:47:25,"0,031s",PASSED
"verifyResponseStatusCode(DeletePersonAddedLastely, 204)",,,2019-04-23 17:47:25,2019-04-23 17:47:25,"0,001s",PASSED
"checkIfPersonExistKo = sendRequest(findTestObject(""PersonsOR/GetOnePerson""))",,,2019-04-23 17:47:25,2019-04-23 17:47:25,"0,032s",PASSED
"verifyResponseStatusCode(checkIfPersonExistKo, 404)",,,2019-04-23 17:47:25,2019-04-23 17:47:25,"0,002s",PASSED
,,,,,,
Test Cases/cdT_Person/cdT_DeletePerson,,,2019-04-23 17:47:25,2019-04-23 17:47:25,"0,334s",PASSED
Start setup action : setupTestCase,,,2019-04-23 17:47:25,2019-04-23 17:47:25,"0,001s",PASSED
"AddSinglePerson = sendRequest(findTestObject(""PersonsOR/PostPerson"", [""gender"":gender, ""name"":namePerson, ""dateBD"":birthDate]))",,,2019-04-23 17:47:25,2019-04-23 17:47:25,"0,017s",PASSED
slurper = new groovy.json.JsonSlurper(),,,2019-04-23 17:47:25,2019-04-23 17:47:25,"0,000s",PASSED
result = slurper.parseText(AddSinglePerson.getResponseBodyContent()),,,2019-04-23 17:47:25,2019-04-23 17:47:25,"0,001s",PASSED
assert name == namePerson,,,2019-04-23 17:47:25,2019-04-23 17:47:25,"0,000s",PASSED
assert gender == gender,,,2019-04-23 17:47:25,2019-04-23 17:47:25,"0,001s",PASSED
assert birthDate == birthDate,,,2019-04-23 17:47:25,2019-04-23 17:47:25,"0,000s",PASSED
"verifyResponseStatusCode(AddSinglePerson, 200)",,,2019-04-23 17:47:25,2019-04-23 17:47:25,"0,002s",PASSED
"checkIfPersonWellAdded = sendRequest(findTestObject(""PersonsOR/GetOnePerson""))",,,2019-04-23 17:47:25,2019-04-23 17:47:25,"0,032s",PASSED
slurper1 = new groovy.json.JsonSlurper(),,,2019-04-23 17:47:25,2019-04-23 17:47:25,"0,000s",PASSED
result1 = slurper1.parseText(checkIfPersonWellAdded.getResponseBodyContent()),,,2019-04-23 17:47:25,2019-04-23 17:47:25,"0,001s",PASSED
assert name == namePerson,,,2019-04-23 17:47:25,2019-04-23 17:47:25,"0,001s",PASSED
assert gender == gender,,,2019-04-23 17:47:25,2019-04-23 17:47:25,"0,000s",PASSED
assert birthDate == birthDate,,,2019-04-23 17:47:25,2019-04-23 17:47:25,"0,001s",PASSED
"verifyResponseStatusCode(checkIfPersonWellAdded, 200, CONTINUE_ON_FAILURE)",,,2019-04-23 17:47:25,2019-04-23 17:47:25,"0,003s",PASSED
"DeletePersonAddedLastely = sendRequest(findTestObject(""PersonsOR/DeleteOnePerson""))",,,2019-04-23 17:47:25,2019-04-23 17:47:25,"0,050s",PASSED
"verifyResponseStatusCode(DeletePersonAddedLastely, 204)",,,2019-04-23 17:47:25,2019-04-23 17:47:25,"0,001s",PASSED
"DeletePersonAgain = sendRequest(findTestObject(""PersonsOR/DeleteOnePerson""))",,,2019-04-23 17:47:25,2019-04-23 17:47:25,"0,040s",PASSED
"verifyResponseStatusCode(DeletePersonAgain, 404)",,,2019-04-23 17:47:25,2019-04-23 17:47:25,"0,002s",PASSED
