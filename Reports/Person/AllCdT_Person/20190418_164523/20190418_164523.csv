Suite/Test/Step Name,Browser,Description,Start time,End time,Duration,Status
AllCdT_Person,,,2019-04-18 16:45:25,2019-04-18 16:45:28,"3,119s",PASSED
,,,,,,
Test Cases/cdT_Person/cdT_AddPerson,,essai,2019-04-18 16:45:27,2019-04-18 16:45:27,"0,708s",PASSED
gender = gender,,,2019-04-18 16:45:27,2019-04-18 16:45:27,"0,002s",PASSED
namePerson = namePerson,,,2019-04-18 16:45:27,2019-04-18 16:45:27,"0,000s",PASSED
birthDate = birthDate,,,2019-04-18 16:45:27,2019-04-18 16:45:27,"0,000s",PASSED
"jsonInputFile = JsonOutput.toJson([""gender"":gender, ""name"":namePerson, ""birthDate"":birthDate])",,,2019-04-18 16:45:27,2019-04-18 16:45:27,"0,004s",PASSED
println(jsonInputFile),,,2019-04-18 16:45:27,2019-04-18 16:45:27,"0,004s",PASSED
"request1 = findTestObject(""PersonsOR/GetOnePerson"")",,,2019-04-18 16:45:27,2019-04-18 16:45:27,"0,045s",PASSED
url = restUrl + namePerson,,,2019-04-18 16:45:27,2019-04-18 16:45:27,"0,000s",PASSED
"checkPersonKo = sendRequest(findTestObject(""PersonsOR/GetOnePerson""))",,,2019-04-18 16:45:27,2019-04-18 16:45:27,"0,063s",PASSED
"verifyResponseStatusCode(checkPersonKo, 404)",,,2019-04-18 16:45:27,2019-04-18 16:45:27,"0,002s",PASSED
"request2 = findTestObject(""PersonsOR/PostPerson"")",,,2019-04-18 16:45:27,2019-04-18 16:45:27,"0,061s",PASSED
"request2.setBodyContent(new com.kms.katalon.core.testobject.impl.HttpTextBodyContent(jsonInputFile, UTF-8, application/json))",,,2019-04-18 16:45:27,2019-04-18 16:45:27,"0,000s",PASSED
AddSinglePerson = sendRequest(request2),,,2019-04-18 16:45:27,2019-04-18 16:45:27,"0,016s",PASSED
slurper = new groovy.json.JsonSlurper(),,,2019-04-18 16:45:27,2019-04-18 16:45:27,"0,006s",PASSED
result = slurper.parseText(AddSinglePerson.getResponseBodyContent()),,,2019-04-18 16:45:27,2019-04-18 16:45:27,"0,007s",PASSED
assert name == namePerson,,,2019-04-18 16:45:27,2019-04-18 16:45:27,"0,010s",PASSED
assert gender == gender,,,2019-04-18 16:45:27,2019-04-18 16:45:27,"0,000s",PASSED
assert birthDate == birthDate,,,2019-04-18 16:45:27,2019-04-18 16:45:27,"0,001s",PASSED
"verifyResponseStatusCode(AddSinglePerson, 200)",,,2019-04-18 16:45:27,2019-04-18 16:45:27,"0,002s",PASSED
"checkIfPersonWellAdded = sendRequest(findTestObject(""PersonsOR/GetOnePerson""))",,,2019-04-18 16:45:27,2019-04-18 16:45:27,"0,042s",PASSED
slurper1 = new groovy.json.JsonSlurper(),,,2019-04-18 16:45:27,2019-04-18 16:45:27,"0,002s",PASSED
result1 = slurper1.parseText(checkIfPersonWellAdded.getResponseBodyContent()),,,2019-04-18 16:45:27,2019-04-18 16:45:27,"0,001s",PASSED
assert name == namePerson,,,2019-04-18 16:45:27,2019-04-18 16:45:27,"0,001s",PASSED
assert gender == gender,,,2019-04-18 16:45:27,2019-04-18 16:45:27,"0,001s",PASSED
assert birthDate == birthDate,,,2019-04-18 16:45:27,2019-04-18 16:45:27,"0,001s",PASSED
"verifyResponseStatusCode(AddSinglePerson, 200)",,,2019-04-18 16:45:27,2019-04-18 16:45:27,"0,002s",PASSED
"DeletePersonAddedLastely = sendRequest(findTestObject(""PersonsOR/DeleteOnePerson""))",,,2019-04-18 16:45:27,2019-04-18 16:45:27,"0,040s",PASSED
"verifyResponseStatusCode(DeletePersonAddedLastely, 204)",,,2019-04-18 16:45:27,2019-04-18 16:45:27,"0,003s",PASSED
"checkPersonKoAgain = sendRequest(findTestObject(""PersonsOR/GetOnePerson""))",,,2019-04-18 16:45:27,2019-04-18 16:45:27,"0,034s",PASSED
"verifyResponseStatusCode(checkPersonKoAgain, 404)",,,2019-04-18 16:45:27,2019-04-18 16:45:27,"0,002s",PASSED
,,,,,,
Test Cases/cdT_Person/cdT_DeletePerson,,,2019-04-18 16:45:27,2019-04-18 16:45:28,"0,347s",PASSED
gender = gender,,,2019-04-18 16:45:27,2019-04-18 16:45:27,"0,001s",PASSED
namePerson = namePerson,,,2019-04-18 16:45:27,2019-04-18 16:45:27,"0,000s",PASSED
birthDate = birthDate,,,2019-04-18 16:45:27,2019-04-18 16:45:27,"0,001s",PASSED
"jsonInputFile = JsonOutput.toJson([""gender"":gender, ""name"":namePerson, ""birthDate"":birthDate])",,,2019-04-18 16:45:27,2019-04-18 16:45:27,"0,001s",PASSED
println(jsonInputFile),,,2019-04-18 16:45:27,2019-04-18 16:45:27,"0,000s",PASSED
"request2 = findTestObject(""PersonsOR/PostPerson"")",,,2019-04-18 16:45:27,2019-04-18 16:45:27,"0,036s",PASSED
"request2.setBodyContent(new com.kms.katalon.core.testobject.impl.HttpTextBodyContent(jsonInputFile, UTF-8, application/json))",,,2019-04-18 16:45:27,2019-04-18 16:45:27,"0,000s",PASSED
AddSinglePerson = sendRequest(request2),,,2019-04-18 16:45:27,2019-04-18 16:45:27,"0,013s",PASSED
slurper = new groovy.json.JsonSlurper(),,,2019-04-18 16:45:27,2019-04-18 16:45:27,"0,000s",PASSED
result = slurper.parseText(AddSinglePerson.getResponseBodyContent()),,,2019-04-18 16:45:27,2019-04-18 16:45:27,"0,000s",PASSED
assert name == namePerson,,,2019-04-18 16:45:27,2019-04-18 16:45:27,"0,001s",PASSED
assert gender == gender,,,2019-04-18 16:45:27,2019-04-18 16:45:27,"0,000s",PASSED
assert birthDate == birthDate,,,2019-04-18 16:45:27,2019-04-18 16:45:27,"0,000s",PASSED
"verifyResponseStatusCode(AddSinglePerson, 200)",,,2019-04-18 16:45:27,2019-04-18 16:45:28,"0,002s",PASSED
"checkIfPersonWellAdded = sendRequest(findTestObject(""PersonsOR/GetOnePerson""))",,,2019-04-18 16:45:28,2019-04-18 16:45:28,"0,034s",PASSED
slurper1 = new groovy.json.JsonSlurper(),,,2019-04-18 16:45:28,2019-04-18 16:45:28,"0,000s",PASSED
result1 = slurper1.parseText(checkIfPersonWellAdded.getResponseBodyContent()),,,2019-04-18 16:45:28,2019-04-18 16:45:28,"0,001s",PASSED
assert name == namePerson,,,2019-04-18 16:45:28,2019-04-18 16:45:28,"0,000s",PASSED
assert gender == gender,,,2019-04-18 16:45:28,2019-04-18 16:45:28,"0,001s",PASSED
assert birthDate == birthDate,,,2019-04-18 16:45:28,2019-04-18 16:45:28,"0,001s",PASSED
"verifyResponseStatusCode(checkIfPersonWellAdded, 200, CONTINUE_ON_FAILURE)",,,2019-04-18 16:45:28,2019-04-18 16:45:28,"0,004s",PASSED
"DeletePersonAddedLastely = sendRequest(findTestObject(""PersonsOR/DeleteOnePerson""))",,,2019-04-18 16:45:28,2019-04-18 16:45:28,"0,031s",PASSED
"verifyResponseStatusCode(DeletePersonAddedLastely, 204)",,,2019-04-18 16:45:28,2019-04-18 16:45:28,"0,001s",PASSED
"DeletePersonAgain = sendRequest(findTestObject(""PersonsOR/DeleteOnePerson""))",,,2019-04-18 16:45:28,2019-04-18 16:45:28,"0,046s",PASSED
"verifyResponseStatusCode(DeletePersonAgain, 404)",,,2019-04-18 16:45:28,2019-04-18 16:45:28,"0,003s",PASSED
,,,,,,
Test Cases/cdT_Person/cdT_retrieveSinglePerson,,,2019-04-18 16:45:28,2019-04-18 16:45:28,"0,404s",PASSED
gender = gender,,,2019-04-18 16:45:28,2019-04-18 16:45:28,"0,001s",PASSED
namePerson = namePerson,,,2019-04-18 16:45:28,2019-04-18 16:45:28,"0,000s",PASSED
birthDate = birthDate,,,2019-04-18 16:45:28,2019-04-18 16:45:28,"0,001s",PASSED
"jsonInputFile = JsonOutput.toJson([""gender"":gender, ""name"":namePerson, ""birthDate"":birthDate])",,,2019-04-18 16:45:28,2019-04-18 16:45:28,"0,001s",PASSED
println(jsonInputFile),,,2019-04-18 16:45:28,2019-04-18 16:45:28,"0,001s",PASSED
"request2 = findTestObject(""PersonsOR/PostPerson"")",,,2019-04-18 16:45:28,2019-04-18 16:45:28,"0,044s",PASSED
"request2.setBodyContent(new com.kms.katalon.core.testobject.impl.HttpTextBodyContent(jsonInputFile, UTF-8, application/json))",,,2019-04-18 16:45:28,2019-04-18 16:45:28,"0,000s",PASSED
AddSinglePerson = sendRequest(request2),,,2019-04-18 16:45:28,2019-04-18 16:45:28,"0,006s",PASSED
slurper = new groovy.json.JsonSlurper(),,,2019-04-18 16:45:28,2019-04-18 16:45:28,"0,001s",PASSED
result = slurper.parseText(AddSinglePerson.getResponseBodyContent()),,,2019-04-18 16:45:28,2019-04-18 16:45:28,"0,001s",PASSED
assert name == namePerson,,,2019-04-18 16:45:28,2019-04-18 16:45:28,"0,000s",PASSED
assert gender == gender,,,2019-04-18 16:45:28,2019-04-18 16:45:28,"0,001s",PASSED
assert birthDate == birthDate,,,2019-04-18 16:45:28,2019-04-18 16:45:28,"0,000s",PASSED
"verifyResponseStatusCode(AddSinglePerson, 200)",,,2019-04-18 16:45:28,2019-04-18 16:45:28,"0,002s",PASSED
"checkIfPersonExist = sendRequest(findTestObject(""PersonsOR/GetOnePerson""))",,,2019-04-18 16:45:28,2019-04-18 16:45:28,"0,049s",PASSED
slurper1 = new groovy.json.JsonSlurper(),,,2019-04-18 16:45:28,2019-04-18 16:45:28,"0,000s",PASSED
result1 = slurper1.parseText(checkIfPersonExist.getResponseBodyContent()),,,2019-04-18 16:45:28,2019-04-18 16:45:28,"0,002s",PASSED
assert name == namePerson,,,2019-04-18 16:45:28,2019-04-18 16:45:28,"0,000s",PASSED
assert gender == gender,,,2019-04-18 16:45:28,2019-04-18 16:45:28,"0,000s",PASSED
assert birthDate == birthDate,,,2019-04-18 16:45:28,2019-04-18 16:45:28,"0,001s",PASSED
"verifyResponseStatusCode(checkIfPersonExist, 200)",,,2019-04-18 16:45:28,2019-04-18 16:45:28,"0,002s",PASSED
"DeletePersonAddedLastely = sendRequest(findTestObject(""PersonsOR/DeleteOnePerson""))",,,2019-04-18 16:45:28,2019-04-18 16:45:28,"0,027s",PASSED
"verifyResponseStatusCode(DeletePersonAddedLastely, 204)",,,2019-04-18 16:45:28,2019-04-18 16:45:28,"0,002s",PASSED
"checkIfPersonExistKo = sendRequest(findTestObject(""PersonsOR/GetOnePerson""))",,,2019-04-18 16:45:28,2019-04-18 16:45:28,"0,039s",PASSED
"verifyResponseStatusCode(checkIfPersonExistKo, 404)",,,2019-04-18 16:45:28,2019-04-18 16:45:28,"0,002s",PASSED
,,,,,,
Test Cases/cdT_Person/cdT_retriveListPerson,,,2019-04-18 16:45:28,2019-04-18 16:45:28,"0,126s",PASSED
"data_init = findTestData(""Data Files/DDT_Person"")",,,2019-04-18 16:45:28,2019-04-18 16:45:28,"0,003s",PASSED
rows_lign = data_init.getRowNumbers(),,,2019-04-18 16:45:28,2019-04-18 16:45:28,"0,000s",PASSED
rows_column = data_init.getColumnNumbers(),,,2019-04-18 16:45:28,2019-04-18 16:45:28,"0,001s",PASSED
"checkListPerson = sendRequest(findTestObject(""PersonsOR/GetAll""))",,,2019-04-18 16:45:28,2019-04-18 16:45:28,"0,012s",PASSED
"verifyElementsCount(checkListPerson, ""name"", rows_lign)",,,2019-04-18 16:45:28,2019-04-18 16:45:28,"0,017s",PASSED
"verifyResponseStatusCode(checkListPerson, 200, CONTINUE_ON_FAILURE)",,,2019-04-18 16:45:28,2019-04-18 16:45:28,"0,002s",PASSED
