Suite/Test/Step Name,Browser,Description,Start time,End time,Duration,Status
AllCdT_Person,,,2019-04-23 16:48:00,2019-04-23 16:48:03,"3,444s",PASSED
,,,,,,
Test Cases/cdT_Person/cdT_retrieveSinglePerson,,,2019-04-23 16:48:01,2019-04-23 16:48:02,"0,722s",PASSED
Start setup action : setupTestCase,,,2019-04-23 16:48:01,2019-04-23 16:48:01,"0,131s",PASSED
"AddSinglePerson = sendRequest(findTestObject(""PersonsOR/PostPerson"", [""gender"":gender, ""name"":namePerson, ""dateBD"":birthDate]))",,,2019-04-23 16:48:01,2019-04-23 16:48:02,"0,014s",PASSED
slurper = new groovy.json.JsonSlurper(),,,2019-04-23 16:48:02,2019-04-23 16:48:02,"0,007s",PASSED
result = slurper.parseText(AddSinglePerson.getResponseBodyContent()),,,2019-04-23 16:48:02,2019-04-23 16:48:02,"0,020s",PASSED
assert name == namePerson,,,2019-04-23 16:48:02,2019-04-23 16:48:02,"0,005s",PASSED
assert gender == gender,,,2019-04-23 16:48:02,2019-04-23 16:48:02,"0,000s",PASSED
assert birthDate == birthDate,,,2019-04-23 16:48:02,2019-04-23 16:48:02,"0,001s",PASSED
"verifyResponseStatusCode(AddSinglePerson, 200)",,,2019-04-23 16:48:02,2019-04-23 16:48:02,"0,003s",PASSED
"checkIfPersonExist = sendRequest(findTestObject(""PersonsOR/GetOnePerson""))",,,2019-04-23 16:48:02,2019-04-23 16:48:02,"0,117s",PASSED
slurper1 = new groovy.json.JsonSlurper(),,,2019-04-23 16:48:02,2019-04-23 16:48:02,"0,001s",PASSED
result1 = slurper1.parseText(checkIfPersonExist.getResponseBodyContent()),,,2019-04-23 16:48:02,2019-04-23 16:48:02,"0,001s",PASSED
assert name == namePerson,,,2019-04-23 16:48:02,2019-04-23 16:48:02,"0,001s",PASSED
assert gender == gender,,,2019-04-23 16:48:02,2019-04-23 16:48:02,"0,001s",PASSED
assert birthDate == birthDate,,,2019-04-23 16:48:02,2019-04-23 16:48:02,"0,001s",PASSED
"verifyResponseStatusCode(checkIfPersonExist, 200)",,,2019-04-23 16:48:02,2019-04-23 16:48:02,"0,002s",PASSED
"DeletePersonAddedLastely = sendRequest(findTestObject(""PersonsOR/DeleteOnePerson""))",,,2019-04-23 16:48:02,2019-04-23 16:48:02,"0,059s",PASSED
"verifyResponseStatusCode(DeletePersonAddedLastely, 204)",,,2019-04-23 16:48:02,2019-04-23 16:48:02,"0,003s",PASSED
"checkIfPersonExistKo = sendRequest(findTestObject(""PersonsOR/GetOnePerson""))",,,2019-04-23 16:48:02,2019-04-23 16:48:02,"0,061s",PASSED
"verifyResponseStatusCode(checkIfPersonExistKo, 404)",,,2019-04-23 16:48:02,2019-04-23 16:48:02,"0,005s",PASSED
,,,,,,
Test Cases/cdT_Person/cdT_AddPerson,,essai,2019-04-23 16:48:02,2019-04-23 16:48:02,"0,441s",PASSED
Start setup action : setupTestCase,,,2019-04-23 16:48:02,2019-04-23 16:48:02,"0,002s",PASSED
"checkPersonKo = sendRequest(findTestObject(""PersonsOR/GetOnePerson""))",,,2019-04-23 16:48:02,2019-04-23 16:48:02,"0,045s",PASSED
"verifyResponseStatusCode(checkPersonKo, 404)",,,2019-04-23 16:48:02,2019-04-23 16:48:02,"0,002s",PASSED
"AddSinglePerson = sendRequest(findTestObject(""PersonsOR/PostPerson"", [""gender"":gender, ""name"":namePerson, ""dateBD"":birthDate]))",,,2019-04-23 16:48:02,2019-04-23 16:48:02,"0,009s",PASSED
slurper = new groovy.json.JsonSlurper(),,,2019-04-23 16:48:02,2019-04-23 16:48:02,"0,000s",PASSED
result = slurper.parseText(AddSinglePerson.getResponseBodyContent()),,,2019-04-23 16:48:02,2019-04-23 16:48:02,"0,000s",PASSED
assert name == namePerson,,,2019-04-23 16:48:02,2019-04-23 16:48:02,"0,001s",PASSED
assert gender == gender,,,2019-04-23 16:48:02,2019-04-23 16:48:02,"0,001s",PASSED
assert birthDate == birthDate,,,2019-04-23 16:48:02,2019-04-23 16:48:02,"0,001s",PASSED
"verifyResponseStatusCode(AddSinglePerson, 200)",,,2019-04-23 16:48:02,2019-04-23 16:48:02,"0,002s",PASSED
"checkIfPersonWellAdded = sendRequest(findTestObject(""PersonsOR/GetOnePerson""))",,,2019-04-23 16:48:02,2019-04-23 16:48:02,"0,042s",PASSED
slurper1 = new groovy.json.JsonSlurper(),,,2019-04-23 16:48:02,2019-04-23 16:48:02,"0,001s",PASSED
result1 = slurper1.parseText(checkIfPersonWellAdded.getResponseBodyContent()),,,2019-04-23 16:48:02,2019-04-23 16:48:02,"0,002s",PASSED
assert name == namePerson,,,2019-04-23 16:48:02,2019-04-23 16:48:02,"0,001s",PASSED
assert gender == gender,,,2019-04-23 16:48:02,2019-04-23 16:48:02,"0,002s",PASSED
assert birthDate == birthDate,,,2019-04-23 16:48:02,2019-04-23 16:48:02,"0,001s",PASSED
"verifyResponseStatusCode(AddSinglePerson, 200)",,,2019-04-23 16:48:02,2019-04-23 16:48:02,"0,003s",PASSED
"DeletePersonAddedLastely = sendRequest(findTestObject(""PersonsOR/DeleteOnePerson""))",,,2019-04-23 16:48:02,2019-04-23 16:48:02,"0,031s",PASSED
"verifyResponseStatusCode(DeletePersonAddedLastely, 204)",,,2019-04-23 16:48:02,2019-04-23 16:48:02,"0,001s",PASSED
"checkPersonKoAgain = sendRequest(findTestObject(""PersonsOR/GetOnePerson""))",,,2019-04-23 16:48:02,2019-04-23 16:48:02,"0,037s",PASSED
"verifyResponseStatusCode(checkPersonKoAgain, 404)",,,2019-04-23 16:48:02,2019-04-23 16:48:02,"0,002s",PASSED
,,,,,,
Test Cases/cdT_Person/cdT_retriveListPerson,,,2019-04-23 16:48:02,2019-04-23 16:48:03,"0,322s",PASSED
Start setup action : setupTestCase,,,2019-04-23 16:48:02,2019-04-23 16:48:02,"0,003s",PASSED
"data_init = findTestData(""Data Files/DDT_Person"")",,,2019-04-23 16:48:02,2019-04-23 16:48:02,"0,008s",PASSED
rows_lign = data_init.getRowNumbers(),,,2019-04-23 16:48:02,2019-04-23 16:48:02,"0,000s",PASSED
"AddSinglePerson = sendRequest(findTestObject(""PersonsOR/PostPerson"", [""gender"":gender, ""name"":namePerson, ""dateBD"":birthDate]))",,,2019-04-23 16:48:02,2019-04-23 16:48:02,"0,009s",PASSED
slurper = new groovy.json.JsonSlurper(),,,2019-04-23 16:48:02,2019-04-23 16:48:02,"0,000s",PASSED
result = slurper.parseText(AddSinglePerson.getResponseBodyContent()),,,2019-04-23 16:48:02,2019-04-23 16:48:02,"0,007s",PASSED
assert name == namePerson,,,2019-04-23 16:48:02,2019-04-23 16:48:02,"0,000s",PASSED
assert gender == gender,,,2019-04-23 16:48:02,2019-04-23 16:48:02,"0,000s",PASSED
assert birthDate == birthDate,,,2019-04-23 16:48:02,2019-04-23 16:48:02,"0,001s",PASSED
"verifyResponseStatusCode(AddSinglePerson, 200)",,,2019-04-23 16:48:02,2019-04-23 16:48:02,"0,001s",PASSED
"checkListPerson = sendRequest(findTestObject(""PersonsOR/GetAll""))",,,2019-04-23 16:48:02,2019-04-23 16:48:02,"0,010s",PASSED
"verifyResponseStatusCode(checkListPerson, 200, STOP_ON_FAILURE)",,,2019-04-23 16:48:02,2019-04-23 16:48:02,"0,005s",PASSED
if (valueExecSuiteTest == 1),,,2019-04-23 16:48:02,2019-04-23 16:48:03,"0,023s",PASSED
"DeletePersonAddedLastely = sendRequest(findTestObject(""PersonsOR/DeleteOnePerson""))",,,2019-04-23 16:48:03,2019-04-23 16:48:03,"0,029s",PASSED
"verifyResponseStatusCode(DeletePersonAddedLastely, 204)",,,2019-04-23 16:48:03,2019-04-23 16:48:03,"0,001s",PASSED
"checkIfPersonExistKo = sendRequest(findTestObject(""PersonsOR/GetOnePerson""))",,,2019-04-23 16:48:03,2019-04-23 16:48:03,"0,031s",PASSED
"verifyResponseStatusCode(checkIfPersonExistKo, 404)",,,2019-04-23 16:48:03,2019-04-23 16:48:03,"0,001s",PASSED
,,,,,,
Test Cases/cdT_Person/cdT_DeletePerson,,,2019-04-23 16:48:03,2019-04-23 16:48:03,"0,389s",PASSED
Start setup action : setupTestCase,,,2019-04-23 16:48:03,2019-04-23 16:48:03,"0,001s",PASSED
"AddSinglePerson = sendRequest(findTestObject(""PersonsOR/PostPerson"", [""gender"":gender, ""name"":namePerson, ""dateBD"":birthDate]))",,,2019-04-23 16:48:03,2019-04-23 16:48:03,"0,020s",PASSED
slurper = new groovy.json.JsonSlurper(),,,2019-04-23 16:48:03,2019-04-23 16:48:03,"0,001s",PASSED
result = slurper.parseText(AddSinglePerson.getResponseBodyContent()),,,2019-04-23 16:48:03,2019-04-23 16:48:03,"0,001s",PASSED
assert name == namePerson,,,2019-04-23 16:48:03,2019-04-23 16:48:03,"0,000s",PASSED
assert gender == gender,,,2019-04-23 16:48:03,2019-04-23 16:48:03,"0,001s",PASSED
assert birthDate == birthDate,,,2019-04-23 16:48:03,2019-04-23 16:48:03,"0,001s",PASSED
"verifyResponseStatusCode(AddSinglePerson, 200)",,,2019-04-23 16:48:03,2019-04-23 16:48:03,"0,002s",PASSED
"checkIfPersonWellAdded = sendRequest(findTestObject(""PersonsOR/GetOnePerson""))",,,2019-04-23 16:48:03,2019-04-23 16:48:03,"0,050s",PASSED
slurper1 = new groovy.json.JsonSlurper(),,,2019-04-23 16:48:03,2019-04-23 16:48:03,"0,001s",PASSED
result1 = slurper1.parseText(checkIfPersonWellAdded.getResponseBodyContent()),,,2019-04-23 16:48:03,2019-04-23 16:48:03,"0,000s",PASSED
assert name == namePerson,,,2019-04-23 16:48:03,2019-04-23 16:48:03,"0,001s",PASSED
assert gender == gender,,,2019-04-23 16:48:03,2019-04-23 16:48:03,"0,000s",PASSED
assert birthDate == birthDate,,,2019-04-23 16:48:03,2019-04-23 16:48:03,"0,001s",PASSED
"verifyResponseStatusCode(checkIfPersonWellAdded, 200, CONTINUE_ON_FAILURE)",,,2019-04-23 16:48:03,2019-04-23 16:48:03,"0,002s",PASSED
"DeletePersonAddedLastely = sendRequest(findTestObject(""PersonsOR/DeleteOnePerson""))",,,2019-04-23 16:48:03,2019-04-23 16:48:03,"0,064s",PASSED
"verifyResponseStatusCode(DeletePersonAddedLastely, 204)",,,2019-04-23 16:48:03,2019-04-23 16:48:03,"0,002s",PASSED
"DeletePersonAgain = sendRequest(findTestObject(""PersonsOR/DeleteOnePerson""))",,,2019-04-23 16:48:03,2019-04-23 16:48:03,"0,068s",PASSED
"verifyResponseStatusCode(DeletePersonAgain, 404)",,,2019-04-23 16:48:03,2019-04-23 16:48:03,"0,001s",PASSED
