Suite/Test/Step Name,Browser,Description,Start time,End time,Duration,Status
AllCdT_Person,,,2019-04-19 19:57:42,2019-04-19 19:57:45,"2,999s",FAILED
,,,,,,
Test Cases/cdT_Person/cdT_AddPerson,,essai,2019-04-19 19:57:43,2019-04-19 19:57:44,"0,534s",FAILED
Start setup action : setupTestCase,,,2019-04-19 19:57:43,2019-04-19 19:57:43,"0,002s",PASSED
gender = gender,,,2019-04-19 19:57:43,2019-04-19 19:57:43,"0,001s",PASSED
namePerson = namePerson,,,2019-04-19 19:57:43,2019-04-19 19:57:43,"0,000s",PASSED
birthDate = birthDate,,,2019-04-19 19:57:43,2019-04-19 19:57:43,"0,000s",PASSED
"data_init = findTestData(""Data Files/DDT_Person"")",,,2019-04-19 19:57:43,2019-04-19 19:57:43,"0,004s",PASSED
rows_lign = data_init.getRowNumbers(),,,2019-04-19 19:57:43,2019-04-19 19:57:43,"0,001s",PASSED
"jsonInputFile = JsonOutput.toJson([""gender"":gender, ""name"":namePerson, ""birthDate"":birthDate])",,,2019-04-19 19:57:43,2019-04-19 19:57:43,"0,001s",PASSED
println(jsonInputFile),,,2019-04-19 19:57:43,2019-04-19 19:57:43,"0,001s",PASSED
"request1 = findTestObject(""PersonsOR/GetOnePerson"")",,,2019-04-19 19:57:43,2019-04-19 19:57:43,"0,034s",PASSED
url = restUrl + namePerson,,,2019-04-19 19:57:43,2019-04-19 19:57:43,"0,000s",PASSED
"checkPersonKo = sendRequest(findTestObject(""PersonsOR/GetOnePerson""))",,,2019-04-19 19:57:43,2019-04-19 19:57:43,"0,052s",PASSED
"verifyResponseStatusCode(checkPersonKo, 404)",,,2019-04-19 19:57:43,2019-04-19 19:57:43,"0,007s",PASSED
"request2 = findTestObject(""PersonsOR/PostPerson"")",,,2019-04-19 19:57:43,2019-04-19 19:57:44,"0,058s",PASSED
"request2.setBodyContent(new com.kms.katalon.core.testobject.impl.HttpTextBodyContent(jsonInputFile, UTF-8, application/json))",,,2019-04-19 19:57:44,2019-04-19 19:57:44,"0,001s",PASSED
AddSinglePerson = sendRequest(request2),,,2019-04-19 19:57:44,2019-04-19 19:57:44,"0,007s",PASSED
slurper = new groovy.json.JsonSlurper(),,,2019-04-19 19:57:44,2019-04-19 19:57:44,"0,005s",PASSED
result = slurper.parseText(AddSinglePerson.getResponseBodyContent()),,,2019-04-19 19:57:44,2019-04-19 19:57:44,"0,009s",PASSED
assert name == namePerson,,,2019-04-19 19:57:44,2019-04-19 19:57:44,"0,007s",PASSED
assert gender == gender,,,2019-04-19 19:57:44,2019-04-19 19:57:44,"0,001s",PASSED
assert birthDate == birthDate,,,2019-04-19 19:57:44,2019-04-19 19:57:44,"0,000s",PASSED
"verifyResponseStatusCode(AddSinglePerson, 200)",,,2019-04-19 19:57:44,2019-04-19 19:57:44,"0,001s",PASSED
"checkIfPersonWellAdded = sendRequest(findTestObject(""PersonsOR/GetOnePerson""))",,,2019-04-19 19:57:44,2019-04-19 19:57:44,"0,036s",PASSED
slurper1 = new groovy.json.JsonSlurper(),,,2019-04-19 19:57:44,2019-04-19 19:57:44,"0,001s",PASSED
result1 = slurper1.parseText(checkIfPersonWellAdded.getResponseBodyContent()),,,2019-04-19 19:57:44,2019-04-19 19:57:44,"0,001s",PASSED
assert name == namePerson,,,2019-04-19 19:57:44,2019-04-19 19:57:44,"0,001s",PASSED
assert gender == gender,,,2019-04-19 19:57:44,2019-04-19 19:57:44,"0,000s",PASSED
assert birthDate == birthDate,,,2019-04-19 19:57:44,2019-04-19 19:57:44,"0,000s",PASSED
if (valueExecSuiteTest == 1),,,2019-04-19 19:57:44,2019-04-19 19:57:44,"0,041s",FAILED
,,,,,,
Test Cases/cdT_Person/cdT_DeletePerson,,,2019-04-19 19:57:44,2019-04-19 19:57:44,"0,453s",PASSED
Start setup action : setupTestCase,,,2019-04-19 19:57:44,2019-04-19 19:57:44,"0,002s",PASSED
gender = gender,,,2019-04-19 19:57:44,2019-04-19 19:57:44,"0,001s",PASSED
namePerson = namePerson,,,2019-04-19 19:57:44,2019-04-19 19:57:44,"0,000s",PASSED
birthDate = birthDate,,,2019-04-19 19:57:44,2019-04-19 19:57:44,"0,000s",PASSED
"jsonInputFile = JsonOutput.toJson([""gender"":gender, ""name"":namePerson, ""birthDate"":birthDate])",,,2019-04-19 19:57:44,2019-04-19 19:57:44,"0,001s",PASSED
println(jsonInputFile),,,2019-04-19 19:57:44,2019-04-19 19:57:44,"0,000s",PASSED
"request2 = findTestObject(""PersonsOR/PostPerson"")",,,2019-04-19 19:57:44,2019-04-19 19:57:44,"0,055s",PASSED
"request2.setBodyContent(new com.kms.katalon.core.testobject.impl.HttpTextBodyContent(jsonInputFile, UTF-8, application/json))",,,2019-04-19 19:57:44,2019-04-19 19:57:44,"0,000s",PASSED
AddSinglePerson = sendRequest(request2),,,2019-04-19 19:57:44,2019-04-19 19:57:44,"0,008s",PASSED
slurper = new groovy.json.JsonSlurper(),,,2019-04-19 19:57:44,2019-04-19 19:57:44,"0,000s",PASSED
result = slurper.parseText(AddSinglePerson.getResponseBodyContent()),,,2019-04-19 19:57:44,2019-04-19 19:57:44,"0,001s",PASSED
assert name == namePerson,,,2019-04-19 19:57:44,2019-04-19 19:57:44,"0,001s",PASSED
assert gender == gender,,,2019-04-19 19:57:44,2019-04-19 19:57:44,"0,000s",PASSED
assert birthDate == birthDate,,,2019-04-19 19:57:44,2019-04-19 19:57:44,"0,001s",PASSED
"verifyResponseStatusCode(AddSinglePerson, 200)",,,2019-04-19 19:57:44,2019-04-19 19:57:44,"0,001s",PASSED
"checkIfPersonWellAdded = sendRequest(findTestObject(""PersonsOR/GetOnePerson""))",,,2019-04-19 19:57:44,2019-04-19 19:57:44,"0,036s",PASSED
slurper1 = new groovy.json.JsonSlurper(),,,2019-04-19 19:57:44,2019-04-19 19:57:44,"0,001s",PASSED
result1 = slurper1.parseText(checkIfPersonWellAdded.getResponseBodyContent()),,,2019-04-19 19:57:44,2019-04-19 19:57:44,"0,000s",PASSED
assert name == namePerson,,,2019-04-19 19:57:44,2019-04-19 19:57:44,"0,000s",PASSED
assert gender == gender,,,2019-04-19 19:57:44,2019-04-19 19:57:44,"0,000s",PASSED
assert birthDate == birthDate,,,2019-04-19 19:57:44,2019-04-19 19:57:44,"0,001s",PASSED
"verifyResponseStatusCode(checkIfPersonWellAdded, 200, CONTINUE_ON_FAILURE)",,,2019-04-19 19:57:44,2019-04-19 19:57:44,"0,002s",PASSED
"DeletePersonAddedLastely = sendRequest(findTestObject(""PersonsOR/DeleteOnePerson""))",,,2019-04-19 19:57:44,2019-04-19 19:57:44,"0,038s",PASSED
"verifyResponseStatusCode(DeletePersonAddedLastely, 204)",,,2019-04-19 19:57:44,2019-04-19 19:57:44,"0,003s",PASSED
"DeletePersonAgain = sendRequest(findTestObject(""PersonsOR/DeleteOnePerson""))",,,2019-04-19 19:57:44,2019-04-19 19:57:44,"0,038s",PASSED
"verifyResponseStatusCode(DeletePersonAgain, 404)",,,2019-04-19 19:57:44,2019-04-19 19:57:44,"0,006s",PASSED
,,,,,,
Test Cases/cdT_Person/cdT_retrieveSinglePerson,,,2019-04-19 19:57:44,2019-04-19 19:57:45,"0,434s",PASSED
Start setup action : setupTestCase,,,2019-04-19 19:57:44,2019-04-19 19:57:44,"0,001s",PASSED
gender = gender,,,2019-04-19 19:57:44,2019-04-19 19:57:44,"0,000s",PASSED
namePerson = namePerson,,,2019-04-19 19:57:44,2019-04-19 19:57:44,"0,001s",PASSED
birthDate = birthDate,,,2019-04-19 19:57:44,2019-04-19 19:57:44,"0,000s",PASSED
"jsonInputFile = JsonOutput.toJson([""gender"":gender, ""name"":namePerson, ""birthDate"":birthDate])",,,2019-04-19 19:57:44,2019-04-19 19:57:44,"0,001s",PASSED
println(jsonInputFile),,,2019-04-19 19:57:44,2019-04-19 19:57:44,"0,001s",PASSED
"request2 = findTestObject(""PersonsOR/PostPerson"")",,,2019-04-19 19:57:44,2019-04-19 19:57:44,"0,046s",PASSED
"request2.setBodyContent(new com.kms.katalon.core.testobject.impl.HttpTextBodyContent(jsonInputFile, UTF-8, application/json))",,,2019-04-19 19:57:44,2019-04-19 19:57:44,"0,000s",PASSED
AddSinglePerson = sendRequest(request2),,,2019-04-19 19:57:44,2019-04-19 19:57:44,"0,015s",PASSED
slurper = new groovy.json.JsonSlurper(),,,2019-04-19 19:57:44,2019-04-19 19:57:44,"0,000s",PASSED
result = slurper.parseText(AddSinglePerson.getResponseBodyContent()),,,2019-04-19 19:57:44,2019-04-19 19:57:44,"0,001s",PASSED
assert name == namePerson,,,2019-04-19 19:57:44,2019-04-19 19:57:44,"0,001s",PASSED
assert gender == gender,,,2019-04-19 19:57:44,2019-04-19 19:57:44,"0,000s",PASSED
assert birthDate == birthDate,,,2019-04-19 19:57:44,2019-04-19 19:57:44,"0,000s",PASSED
"verifyResponseStatusCode(AddSinglePerson, 200)",,,2019-04-19 19:57:44,2019-04-19 19:57:44,"0,003s",PASSED
"checkIfPersonExist = sendRequest(findTestObject(""PersonsOR/GetOnePerson""))",,,2019-04-19 19:57:44,2019-04-19 19:57:44,"0,046s",PASSED
slurper1 = new groovy.json.JsonSlurper(),,,2019-04-19 19:57:44,2019-04-19 19:57:44,"0,001s",PASSED
result1 = slurper1.parseText(checkIfPersonExist.getResponseBodyContent()),,,2019-04-19 19:57:44,2019-04-19 19:57:44,"0,000s",PASSED
assert name == namePerson,,,2019-04-19 19:57:44,2019-04-19 19:57:44,"0,001s",PASSED
assert gender == gender,,,2019-04-19 19:57:44,2019-04-19 19:57:44,"0,000s",PASSED
assert birthDate == birthDate,,,2019-04-19 19:57:44,2019-04-19 19:57:44,"0,001s",PASSED
"verifyResponseStatusCode(checkIfPersonExist, 200)",,,2019-04-19 19:57:44,2019-04-19 19:57:45,"0,002s",PASSED
"DeletePersonAddedLastely = sendRequest(findTestObject(""PersonsOR/DeleteOnePerson""))",,,2019-04-19 19:57:45,2019-04-19 19:57:45,"0,039s",PASSED
"verifyResponseStatusCode(DeletePersonAddedLastely, 204)",,,2019-04-19 19:57:45,2019-04-19 19:57:45,"0,003s",PASSED
"checkIfPersonExistKo = sendRequest(findTestObject(""PersonsOR/GetOnePerson""))",,,2019-04-19 19:57:45,2019-04-19 19:57:45,"0,032s",PASSED
"verifyResponseStatusCode(checkIfPersonExistKo, 404)",,,2019-04-19 19:57:45,2019-04-19 19:57:45,"0,001s",PASSED
,,,,,,
Test Cases/cdT_Person/cdT_retriveListPerson,,,2019-04-19 19:57:45,2019-04-19 19:57:45,"0,296s",PASSED
Start setup action : setupTestCase,,,2019-04-19 19:57:45,2019-04-19 19:57:45,"0,001s",PASSED
gender = gender,,,2019-04-19 19:57:45,2019-04-19 19:57:45,"0,000s",PASSED
namePerson = namePerson,,,2019-04-19 19:57:45,2019-04-19 19:57:45,"0,001s",PASSED
birthDate = birthDate,,,2019-04-19 19:57:45,2019-04-19 19:57:45,"0,000s",PASSED
"jsonInputFile = JsonOutput.toJson([""gender"":gender, ""name"":namePerson, ""birthDate"":birthDate])",,,2019-04-19 19:57:45,2019-04-19 19:57:45,"0,001s",PASSED
println(jsonInputFile),,,2019-04-19 19:57:45,2019-04-19 19:57:45,"0,001s",PASSED
"request2 = findTestObject(""PersonsOR/PostPerson"")",,,2019-04-19 19:57:45,2019-04-19 19:57:45,"0,041s",PASSED
"request2.setBodyContent(new com.kms.katalon.core.testobject.impl.HttpTextBodyContent(jsonInputFile, UTF-8, application/json))",,,2019-04-19 19:57:45,2019-04-19 19:57:45,"0,000s",PASSED
AddSinglePerson = sendRequest(request2),,,2019-04-19 19:57:45,2019-04-19 19:57:45,"0,009s",PASSED
slurper = new groovy.json.JsonSlurper(),,,2019-04-19 19:57:45,2019-04-19 19:57:45,"0,000s",PASSED
result = slurper.parseText(AddSinglePerson.getResponseBodyContent()),,,2019-04-19 19:57:45,2019-04-19 19:57:45,"0,001s",PASSED
assert name == namePerson,,,2019-04-19 19:57:45,2019-04-19 19:57:45,"0,000s",PASSED
assert gender == gender,,,2019-04-19 19:57:45,2019-04-19 19:57:45,"0,000s",PASSED
assert birthDate == birthDate,,,2019-04-19 19:57:45,2019-04-19 19:57:45,"0,000s",PASSED
"verifyResponseStatusCode(AddSinglePerson, 200)",,,2019-04-19 19:57:45,2019-04-19 19:57:45,"0,002s",PASSED
"checkListPerson = sendRequest(findTestObject(""PersonsOR/GetAll""))",,,2019-04-19 19:57:45,2019-04-19 19:57:45,"0,013s",PASSED
"verifyResponseStatusCode(checkListPerson, 200, STOP_ON_FAILURE)",,,2019-04-19 19:57:45,2019-04-19 19:57:45,"0,002s",PASSED
"DeletePersonAddedLastely = sendRequest(findTestObject(""PersonsOR/DeleteOnePerson""))",,,2019-04-19 19:57:45,2019-04-19 19:57:45,"0,033s",PASSED
"verifyResponseStatusCode(DeletePersonAddedLastely, 204)",,,2019-04-19 19:57:45,2019-04-19 19:57:45,"0,002s",PASSED
"checkIfPersonExistKo = sendRequest(findTestObject(""PersonsOR/GetOnePerson""))",,,2019-04-19 19:57:45,2019-04-19 19:57:45,"0,035s",PASSED
"verifyResponseStatusCode(checkIfPersonExistKo, 404)",,,2019-04-19 19:57:45,2019-04-19 19:57:45,"0,002s",PASSED
